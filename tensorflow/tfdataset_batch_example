#!/usr/bin/env python
"""
An example code to demo tf.data.Dataset.batch()

__author__ = "Hide Inada"
__copyright__ = "Copyright 2018, Hide Inada"
__license__ = "The MIT License"
__email__ = "hideyuki@gmail.com"
"""

import os
import logging

import tensorflow as tf
import numpy as np

import keras

log = logging.getLogger(__name__)
logging.basicConfig(level=os.environ.get("LOGLEVEL", "INFO"))  # Change the 2nd arg to INFO to suppress debug logging

tf.enable_eager_execution()


def example():
    """An example code.
    """
    a = ['apple', 'banana', 'coconut', 'donut', 'egg']
    d = tf.data.Dataset.from_tensor_slices(a)

    # Split the 5-element dataset into 2 batches.  Each batch size is 2.  Drop the last element.
    batches = d.batch(2, drop_remainder=True)  # batch size=2

    for batch in batches:
        next_a_sub_val = batch.numpy()
        print(next_a_sub_val)
        # This outputs
        # [b'apple' b'banana']
        # [b'coconut' b'donut']

    # Split the 5-element dataset into 3 batches.  Each batch size is 2 except the last batch.  Keep the last element.
    batches = d.batch(2, drop_remainder=False)  # batch size=2

    for batch in batches:
        next_a_sub_val = batch.numpy()
        print(next_a_sub_val)
        # This outputs
        #[b'apple' b'banana']
        #[b'coconut' b'donut']
        #[b'egg']


def main():
    """Defines an application's main functionality"""
    example()


if __name__ == "__main__":
    main()
