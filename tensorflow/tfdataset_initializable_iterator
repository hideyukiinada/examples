#!/usr/bin/env python
"""
An example code to demo the use of from_tensor_slices and make_one_shot_iterator

References on how to use iterator
---------------------------------
https://www.tensorflow.org/guide/datasets

__author__ = "Hide Inada"
__copyright__ = "Copyright 2018, Hide Inada"
__license__ = "The MIT License"
__email__ = "hideyuki@gmail.com"
"""

import os
import logging

import tensorflow as tf
import numpy as np

import keras

log = logging.getLogger(__name__)
logging.basicConfig(level=os.environ.get("LOGLEVEL", "INFO"))  # Change the 2nd arg to INFO to suppress debug logging


def example():
    """An example code.
    """
    tf.reset_default_graph()

    a = [1., 3., 5.]
    d = tf.data.Dataset.from_tensor_slices(a)

    multiplier = tf.placeholder(tf.float32, shape=())  # This value is set by feed_dict later.
    d2 = d.map(lambda e: e * multiplier)

    iter = d2.make_initializable_iterator()

    next_a = iter.get_next()

    init_op = tf.global_variables_initializer()  # Set up operator to assign all init values to variables

    with tf.Session() as s:
        s.run(init_op)  # Actually assign initial value to variables
        s.run(iter.initializer, feed_dict={multiplier: 2.0})

        while True:
            try:
                next_a_val = next_a.eval()
                print(next_a_val)

            except tf.errors.OutOfRangeError:
                print("All data in a have been returned by the iterator")
                break


def main():
    """Defines an application's main functionality"""
    example()


if __name__ == "__main__":
    main()
