#!/usr/bin/env python
"""
An example code to demo the use of tf.add

__author__ = "Hide Inada"
__copyright__ = "Copyright 2018, Hide Inada"
__license__ = "The MIT License"
__email__ = "hideyuki@gmail.com"
"""

import os
import logging

import tensorflow as tf

log = logging.getLogger(__name__)
logging.basicConfig(level=os.environ.get("LOGLEVEL", "INFO"))  # Change the 2nd arg to INFO to suppress debug logging


def example():
    """An example code.
    """
    tf.reset_default_graph()

    with tf.variable_scope("vs1") as scope:
        a = tf.get_variable("a", [2, 3], dtype=tf.float32, initializer=tf.constant_initializer(50))
        b = tf.get_variable("b", [2, 3], dtype=tf.float32,
                            initializer=tf.contrib.layers.xavier_initializer(seed=0))

        c = tf.placeholder(tf.float32, [2, 3])
        sum_op1 = tf.add(a, b)
        sum_op = tf.add(sum_op1, c)

    init_op = tf.global_variables_initializer()  # Set up operator to assign all init values to variables

    with tf.Session() as s:
        s.run(init_op)  # Actually assign initial value to variables

        sum = s.run(sum_op, feed_dict={c: [[100, 200, 300], [400, 500, 600]]})
        print(sum)


def main():
    """Defines an application's main functionality"""
    example()


if __name__ == "__main__":
    main()
