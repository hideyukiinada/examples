#!/usr/bin/env python
"""
An example code to demo the use of TensorFlow

__author__ = "Hide Inada"
__copyright__ = "Copyright 2019, Hide Inada"
__license__ = "The MIT License"
__email__ = "hideyuki@gmail.com"
"""

import os
import logging

import tensorflow as tf
import numpy as np

import keras

log = logging.getLogger(__name__)
logging.basicConfig(level=os.environ.get("LOGLEVEL", "INFO"))  # Change the 2nd arg to INFO to suppress debug logging


def example():
    """An example code.
    """
    tf.reset_default_graph()

    # Features are not normalized for illustration purposes
    a = np.array([[0.8, 1, 100], [0, 1000, 5], [0.1, 2, 2000], [0, 2000, 4]])

    x = tf.placeholder(tf.float32, shape=(None, 3), name="x")

    x_first_cell = x[:, 0]  # [0.8, 0., 0.1, 0.]
    x_second_cell = x[:, 1]  # [1.e+00, 1.e+03, 2.e+00, 2.e+03]
    x_third_cell = x[:, 2]  # [100., 5., 2000., 4.]

    x_first_cell_ceil = tf.ceil(x_first_cell)  # [1., 0., 1., 0.]

    x_filtered_second_cell = tf.multiply(x_first_cell_ceil, x_second_cell)  # [1., 0., 2., 0.]
    x_positive_sum = tf.reduce_sum(x_filtered_second_cell)  # 3.0

    # Negate first cell
    x_first_cell_ceil_bool = tf.cast(x_first_cell_ceil, tf.bool)  # [True, False, True, False]
    x_first_cell_ceil_bool_negated_bool = tf.logical_not(x_first_cell_ceil_bool)  # [False, True, False, True]
    x_first_cell_ceil_negated = tf.cast(x_first_cell_ceil_bool_negated_bool, tf.float32)  # [0., 1., 0., 1.]

    # Multiply the third cell
    x_filtered_third_cell = tf.multiply(x_first_cell_ceil_negated, x_third_cell)  # [0., 5., 0., 4.]
    x_negative_sum = tf.reduce_sum(x_filtered_third_cell)  # 9.0

    init_op = tf.global_variables_initializer()  # Set up operator to assign all init values to variables

    with tf.Session() as s:
        s.run(init_op)  # Actually assign initial value to variables

        val = s.run(x_positive_sum, feed_dict={x: a})
        print("value of x: %s" % (str(val)))

        val = s.run(x_negative_sum, feed_dict={x: a})
        print("value of x: %s" % (str(val)))


def main():
    """Defines an application's main functionality"""
    example()


if __name__ == "__main__":
    main()
