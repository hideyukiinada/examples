#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Extract text from Aozora Bunko's public domain books (https://www.aozora.gr.jp/) for processing text
data for machine learning.

Specifically this script does the following:
* Convert encoding from Japanese Shift-JIS to UTF-8.
* Remove annotations added by editors.
* Remove meta data at the end of the book.

Please read Aozora Bunko's policy to determine if you are allowed to post a book after processing this way.

Usage
-----
1. (IMPORTANT) Make a duplicate copy of your book(s) in a temporary area (e.g. /tmp/japanese_books).
   This is to ensure that your original books won't be impacted while processing.
   Do NOT run this script against your original books!

2. Change the OUTPUT_DIR parameter to specify the directory to store UTF-8 version of books

3. Type:
   aozora_extract /tmp/japanese_books

__author__ = "Hide Inada"
__copyright__ = "Copyright 2018, Hide Inada"
__license__ = "The MIT License"
__email__ = "hideyuki@gmail.com"
"""
import os
import sys
import logging

from pathlib import Path
import codecs
import regex

OUTPUT_DIR = '/tmp/ml_examples/japanese_books'  # Change this to specify the directory to store UTF-8 version of books
END_OF_TEXT_MARKER = "底本："
BAR_SYMBOL = "｜"

log = logging.getLogger(__name__)
logging.basicConfig(level=os.environ.get("LOGLEVEL", "INFO"))  # Change the 2nd arg to INFO to suppress debug logging


def main():
    # Check arguments
    script_file_name = Path(sys.argv[0]).name
    if len(sys.argv) < 2:
        print("Usage: %s <input dir>" % (script_file_name))
        sys.exit(1)

    # Check if input & output directories exist
    input_dir_path = Path(sys.argv[1])
    if input_dir_path.exists() is False:
        log.fatal("% does not exist." % (input_dir_path))
        sys.exit(1)

    output_dir_path = Path(OUTPUT_DIR)
    if output_dir_path.exists() is False:
        output_dir_path.mkdir(parents=True, exist_ok=True)
        log.info("Created: %s" % (output_dir_path))

    # Process files
    for input_file in input_dir_path.glob("*.txt"):
        output_file_path = output_dir_path / input_file.name
        log.info("Writing: %s" % (output_file_path))

        header = True
        note_section = False

        # Process a single file
        with codecs.open(input_file, "r", encoding="shiftjis") as f_input:
            with open(output_file_path, "w") as f_out:

                for line in f_input:

                    r1 = regex.compile(r"［.*?］")
                    r2 = regex.compile(r"《.*?》")
                    if header is True:
                        if line.find("-----") >= 0:
                            if note_section is False:
                                note_section = True
                            else:
                                header = False
                        continue

                    if line.find(END_OF_TEXT_MARKER) >= 0:
                        break

                    line = line.replace(BAR_SYMBOL, "")
                    line = r1.sub("", line)
                    line = r2.sub("", line)

                    f_out.write(line)


if __name__ == "__main__":
    main()
