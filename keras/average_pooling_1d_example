#!/usr/bin/env python
"""
An example code to demo the use of Keras' GlobalAveragePooling1D

Keras API reference page: https://keras.io/layers/pooling/

__author__ = "Hide Inada"
__copyright__ = "Copyright 2018, Hide Inada"
__license__ = "The MIT License"
__email__ = "hideyuki@gmail.com"
"""

import os
import logging

import numpy as np

import keras
from keras.models import Sequential
from keras.layers import Embedding
from keras.layers import GlobalAveragePooling1D

log = logging.getLogger(__name__)
logging.basicConfig(level=os.environ.get("LOGLEVEL", "INFO"))  # Change the 2nd arg to INFO to suppress debug logging


def example():
    """An example code.
    """

    input_data = np.array([
        [[0.2, 0.2, 0.4], [0.3, 0.3, 0.6], [0.7, 0.7, 0.5]],  # mean of these three points is [0.4, 0.4, 0.5]
        [[0.1, 0.1, 0.1], [0.2, 0.2, 0.2], [0.6, 0.6, 0.6]]  # mean is [0.3, 0.3, 0.3]
    ])

    model = Sequential()
    model.add(GlobalAveragePooling1D())

    model.compile(keras.optimizers.Adam(), loss=keras.losses.binary_crossentropy,
                  metrics=['accuracy'])
    y_hat = model.predict(x=input_data)
    # y_hat is the array of means of each triplets, namely:
    #[[0.4 0.4 0.5]
    # [0.3 0.3 0.3]]

    print(y_hat)


def main():
    """Defines an application's main functionality"""
    example()


if __name__ == "__main__":
    main()
